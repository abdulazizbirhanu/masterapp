{{- $name := include "svc.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "svc.fullname" . }}
  labels:
    app: {{ template "svc.name" .}}
    chart: {{ template "svc.chart" .}}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    releaseNo: {{ .Values.releaseNo }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.upgradeStrategy }}
  selector:
    matchLabels:
      app: {{ template "svc.name" .}}
      chart: {{ template "svc.chart" .}}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "svc.name" .}}
        chart: {{ template "svc.chart" .}}
        release: {{ .Release.Name }}
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
    spec:
      {{ if .Values.inf.registry -}}
      imagePullSecrets:
      - name: {{ .Values.inf.registry.secretName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{ if .Values.probes -}}
          {{- if .Values.probes.liveness -}}
          livenessProbe:
            httpGet: 
              port: {{ .Values.probes.liveness.port }}
              path: {{ .Values.probes.liveness.path }}
              httpHeaders:
              - name: HealthProbe-Type
                value: Readiness
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end -}}
          {{- end -}}
          {{- if .Values.probes -}}
          {{- if .Values.probes.readiness }}
          readinessProbe:
            httpGet:
              port: {{ .Values.probes.readiness.port }}
              path: {{ .Values.probes.readiness.path }}
              httpHeaders:
              - name: HealthProbe-Type
                value: Readiness
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          {{- end -}}
          {{- end }}
          image: "{{ template "fqdn-image" . }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PATH_BASE
              value: {{ include "pathBase" . }}
            - name: k8sname
              value: {{ .Values.clusterName }}
          {{- if .Values.env.values -}}
          {{- range .Values.env.values }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end -}}
          {{- end -}}
          {{- if .Values.env.svcdnsnames -}}
          {{- range .Values.env.svcdnsnames }}
            - name: {{ .name }}
              #prepend variables with $ while accessing inside look/range scope as . scope is get overriden, read more on the issue on github
              value: "{{ printf "%s" .value | replace "{env-placeholder}" $.Values.app.envpostfix }}"
          {{- end -}}
          {{- end -}}
          {{- if .Values.env.configmap -}}
          {{- range .Values.env.configmap }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $name }}
                  key: {{ .key }}
          {{- end -}}
          {{- end }}
          {{- if .Values.env.allconfigmap -}}
          {{- range .Values.env.allconfigmap }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: allconfigmaps
                  key: {{ .key }}
          {{- end -}}
          {{- end }}
          {{- if .Values.env.secret -}}
          {{- range .Values.env.secret }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: mobappsecrets
                  key: {{ .key }}
          {{- end -}}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: grpc
              containerPort: 81
              protocol: TCP                
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

